import { ElementRef, OnChanges, SimpleChanges, Renderer2, DoCheck } from '@angular/core';
import { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';
export declare class FormlyAttributes implements OnChanges, DoCheck {
    private renderer;
    private elementRef;
    field: FormlyFieldConfig;
    private placeholder?;
    private tabindex?;
    private readonly?;
    onFocus($event: any): void;
    onBlur($event: any): void;
    readonly to: FormlyTemplateOptions;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * We need to re-evaluate all the attributes on every change detection cycle, because
     * by using a HostBinding we run into certain edge cases. This means that whatever logic
     * is in here has to be super lean or we risk seriously damaging or destroying the performance.
     *
     * Formly issue: https://github.com/formly-js/ngx-formly/issues/1317
     * Material issue: https://github.com/angular/material2/issues/14024
     */
    ngDoCheck(): void;
    private setAttributes;
}
